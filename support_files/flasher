<!DOCTYPE html>
<html>
  <head>
  
  <meta charset="utf-8" />
    <title>Launcher Web Flasher</title>
    <meta
      name="description"
      content="Easily allows users to install the Launcher on M5Cardputer, M5StickC, M5stickC plus & M5stickC Plus2, Lilygo T-Embed, T-Deck, T-Display, CYD and other boards to come!"
    />
    <meta name="viewport" content="width=device-width" />
    <meta name="color-scheme" content="dark light" />
    <style>
    body {
		font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif;
		margin: 0;
		padding: 20px;
		color: #00dd00;
		background-color: #202124;
		--esp-tools-button-color: #008000;
    }
	.content {
		max-width: 600px;
		margin: 0 auto;
		padding: 12px;
	}
	h2 {
		margin-top: 2em;
	}
	h3 {
		margin-top: 1.5em;
	}
    a {
		color: #e0d204;
		text-decoration: none;
    }
    a:hover {
		text-decoration: underline;
    }
	.invisible {
		visibility: hidden;
	}
	.hidden {
		display: none;
	}
	esp-web-install-button[install-unsupported] {
		visibility: inherit;
	}
	.content pre {
		max-width: 100%;
		overflow-y: scroll;
	}
	.footer {
		margin-top: 24px;
		border-top: 1px solid #ccc;
		padding-top: 24px;
		text-align: center;
	}
	.footer .initiative {
		font-style: italic;
		margin-top: 16px;
	}
	table {
		border-spacing: 0;
	}
	td {
		padding: 8px;
		border-bottom: 1px solid #ccc;
	}
	.radios li {
		list-style: none;
		line-height: 2em;
	}
	.logo {
		max-width: 400px;
		display: block;
		margin-left: auto;
		margin-right: auto;
	}
	.wrapper {
		display: flex;
		justify-content: center;
	}
	.back1usb {
		height: 18%;
		width: 20%;
		padding: 10px;
		text-align: center;
	}
	.back2usb {
		height: 18%;
		width: 20%;
		padding: 10px;
		text-align: center;
	}
    .info-box {
		border: 2px solid #008000;
		background-color: transparent;
		color: white;
		border-radius: 8px;
		margin: 20px 10%;
     }

    .switch {
		display: flex;
		justify-content: center;
		margin: 20px 0;
    }

    .switch label {
		cursor: pointer;
		background-color: #333;
		color: #fff;
		border-radius: 20px;
		padding: 10px 20px;
		margin: 0 5px;
		transition: background-color 0.3s;
    }

    .switch input[type="radio"] {
		display: none;
    }

    .switch input[type="radio"]:checked + label {
		background-color: #008000;
		color: #fff;
    }

	.device-selection {
		margin: 20px 0;
	}

	.device-selection h3 {
		text-align: center;
	}

	.device-category {
		display: flex;
		justify-content: space-between;
		margin-bottom: 20px;
	}

	.device-button {
		background-color: #333;
		color: white;
		border: none;
		border-radius: 20px;
		padding: 10px 20px;
		font-size: 16px;
		cursor: pointer;
		transition: background-color 0.3s;
	}

	.device-button:focus {
		outline: none;
	}

	.device-list {
		display: none;
	}

	.device-selection input[type="radio"] {
		display: none;
	}

	.device-selection label {
		display: block;
		background-color: #333;
		color: #fff;
		border-radius: 6px;
		padding: 10px;
		margin: 5px 0;
		cursor: pointer;
		transition: background-color 0.3s;
	}

	.device-selection input[type="radio"]:checked + label {
		background-color: #008000;
		color: #fff;
	}

	.device-selection input[type="radio"]:focus + label {
		outline: none;
	}

	.device-selection .device-category button.active {
		background-color: #008000;
	}

	.device-list.m5stack {
		display: none;
	}
	.device-list.lilygo {
		display: none;
	}
	.device-list.cyd {
		display: none;
	}
	.device-list.marauder {
		display: none;
	}
	.device-list.esp32 {
		display: none;
	}	

	@media (prefers-color-scheme: dark) {
		body {
			background-color: #333;
			color: #fff;
		}
		a {
			color: #58a6ff;
		}
	}


	input[type='radio'] {
		accent-color: #008000;
	}
	
	.instructions {
		display: none;
		margin-top: 5px;
		padding: 5px;
		border: 1px solid #008000;
		background-color: #202124;
		border-radius: 5px;
	}
	.btn {
		margin: 2px;
		padding: 5px 10px;
		border: 1px solid #008000;
		background-color: #202124;
		color: white;
		cursor: pointer;
		border-radius: 5px;
	}
	.btn:hover {
		background-color: #0056b3;
	}

    </style>
    <script type="module" src="https://unpkg.com/esp-web-tools@8.0.1/dist/web/install-button.js?module"></script>
  </head>
  <body>
	<img src="Launcher_anim.webp" alt="Logo" class="logo">   
    
      <center>
    <div class="content">
      <p><b>Connect your device then select the "Flash" option and push connect.</b><br></p>
      <p>If asked to put your device into <b>download mode</b> do as follows:</p>

	  <button class="btn" onclick="showInstructions('cardputer')">Cardputer</button>
	  <button class="btn" onclick="showInstructions('stickcs')">StickCs</button>
	  <button class="btn" onclick="showInstructions('t-embed')">T-Embed</button>
	  <button class="btn" onclick="showInstructions('t-deck')">T-Deck</button>
	  <button class="btn" onclick="showInstructions('others')">Others</button>
	  
	  <div id="cardputer" class="instructions">
		  <b>Cardputer:</b> Hold the btn G0 (upper right corner) and press RST (upper left corner).
	  </div>
	  <div id="stickcs" class="instructions">
		  <b>StickCs:</b> Turn off, connect a jumper cable between GND and G0 (in the header pin), connect the USB Cable and remove the jumper cable.
	  </div>
	  <div id="t-embed" class="instructions">
		  <b>T-Embed:</b> Keep encoder center button pressed and press RST button (CC1101 this btn is on the board, beside ESP32-S3 chip).
	  </div>
	  <div id="t-deck" class="instructions">
		  <b>T-Deck:</b> Keep the trackpad button pressed and press RST (in the left side).
	  </div>
	  <div id="others" class="instructions">
		  <b>Others:</b> Turn off, keep BOOT button pressed and plug the USB Cable (or press RST Button).
	  </div>
  <h3>Select the version:</h3>
    <div class="switch">
      <input type="radio" name="version" id="latest" value="Release" checked />
      <label for="latest">Latest Release</label>
      <input type="radio" name="version" id="beta" value="Beta" />
      <label for="beta">Beta Release</label>
    </div>

	<div class="device-selection">
	  <div class="device-category">
		<button class="device-button" id="m5stack" onclick="toggleDeviceCategory('m5stack')">M5Stack</button>
		<button class="device-button" id="lilygo" onclick="toggleDeviceCategory('lilygo')">Lilygo</button>
		<button class="device-button" id="cyd" onclick="toggleDeviceCategory('cyd')"> CYD </button>
		<button class="device-button" id="marauder" onclick="toggleDeviceCategory('marauder')"> Marauder </button>
		<button class="device-button" id="esp32" onclick="toggleDeviceCategory('esp32')">ESP32</button>
	  </div>

<!-- Information added by workflow -->

<!-- BOARDS -->

<!-- Information added by workflow -->

	</div>

      <p class="button-row" align="center">
        <esp-web-install-button class="invisible"></esp-web-install-button>
      </p>
      </center>
      <div class="footer">
        Flasher by <a href="https://github.com/bmorcelli"
          >bmorcelli</a
        > &mdash;
        Installer powered by <a href="https://esphome.github.io/esp-web-tools/">ESP Web Tools</a> üõ†Ô∏è
		
		<br>

    </div>
  <script>
	function toggleDeviceCategory(category) {
	  document.querySelectorAll('.device-list').forEach(function(list) {
		list.style.display = 'none';
	  });

	  const selectedList = document.querySelector('.' + category);
	  selectedList.style.display = 'block';

	  document.querySelectorAll('.device-button').forEach(function(button) {
		button.classList.remove('active');
	  });
	  document.getElementById(category).classList.add('active');
	}


    function updateManifest() {
      const versionInput = document.querySelector('input[name="version"]:checked');
      const typeInput = document.querySelector('input[name="type"]:checked');
  
      if (!versionInput || !typeInput) {
        //console.error('Version or type is not selected.');
        return; // Evita a execu√ß√£o do resto da fun√ß√£o caso algum dos campos n√£o esteja selecionado
      }

      const version = versionInput.value;
      const type = typeInput.value;
  
      const button = document.querySelector('esp-web-install-button');
      button.manifest = `${version}/Manifest-${type}.json`;
      button.classList.remove('invisible');
    }


    document.querySelectorAll('input[name="version"], input[name="type"]').forEach(radio => 
      radio.addEventListener("change", updateManifest)
    );

    updateManifest();
    function showInstructions(device) {
	// Hide all instructions
	document.querySelectorAll('.instructions').forEach(el => el.style.display = 'none');
	// Show the selected instruction
	document.getElementById(device).style.display = 'block';
    }
  </script>
  </body>
</html>
